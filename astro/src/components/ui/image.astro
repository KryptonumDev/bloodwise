---
import type { ComponentProps } from "astro/types";
import { Image as AstroImage } from "astro:assets";

export type ImageDataTypes = {
  asset: {
    url: string;
    altText: string;
    extension: string;
    metadata: {
      dimensions: {
        width: number;
        height: number;
      };
      lqip: string;
    };
  };
};

export const ImageDataQuery = `
  asset -> {
    url,
    altText,
    extension,
    metadata {
      dimensions {
        width,
        height,
      },
      lqip,
    },
  },
`;

type Props = {
  data: ImageDataTypes;
  sizes: string;
  priority?: boolean;
} & Partial<ComponentProps<typeof AstroImage>>;

const { data, priority, ...props } = Astro.props;
---

<AstroImage
  {...{
    src: data.asset.url,
    alt: data.asset.altText || "",
    width: data.asset.metadata.dimensions.width,
    height: data.asset.metadata.dimensions.height,
    style: {
      background: `url(${data.asset.metadata.lqip}) center / cover no-repeat`,
    },
    onload: 'this.removeAttribute("style")',
    ...(priority && {
      loading: "eager",
      fetchpriority: "high",
    }),
    widths: [48, 64, 96, 128, 256, 384, 640, 750, 828, 1080, 1200, 1920, 2048, 3840],
    ...(data.asset.extension === "svg" && {
      format: ["svg"],
      widths: undefined,
      sizes: undefined,
    }),
    ...props,
  } as ComponentProps<typeof AstroImage>}
/>
