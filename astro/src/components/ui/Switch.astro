---
import type { HTMLAttributes } from "astro/types";

type Props = {
  asLabel?: boolean;
  inputProps?: HTMLAttributes<"input">;
} & HTMLAttributes<"label">;

const { inputProps, asLabel, ...props } = Astro.props;

const Element = asLabel ? "label" : "div";
---

<Element class='switch' {...props}>
  <input type='checkbox' {...inputProps} />
  <div class='dot'>
    <svg
      xmlns='http://www.w3.org/2000/svg'
      width='20'
      height='20'
      fill='none'
      stroke='#fff'
      stroke-linecap='round'
      stroke-linejoin='round'
      stroke-width='1.5'
    >
      <path
        d='m5 11.355 1.338 1.435c.739.791 1.108 1.187 1.521 1.312.364.11.75.08 1.096-.084.394-.186.71-.634 1.343-1.53L15 5.833'
      ></path>
    </svg>
  </div>
</Element>

<style lang='scss'>
  .switch {
    input {
      position: absolute;
      opacity: 0;
    }
    &:has(input:disabled) {
      opacity: 0.62;
    }
    cursor: pointer;
    width: 56px;
    height: 32px;
    margin: 6px 0;
    border-radius: 42px;
    border: 1px solid var(--secondary-600, #a844cb);
    background-color: var(--neutral-100, #fff);
    transition:
      background-color 0.5s var(--easing),
      border-color 0.5s var(--easing);
    &:hover {
      background-color: var(--secondary-100, #f9e8ff);
    }
    &:has(input:focus-visible) {
      outline: 2px solid var(--primary-800, #01403b);
      outline-offset: 3px;
    }
    &:has(input:checked) {
      border-color: var(--secondary-800, #6f128f);
      background-color: var(--secondary-800, #6f128f);
      .dot {
        transform: translateX(24px);
        background-color: rgba(255, 255, 255, 0.5);
        svg {
          stroke-dashoffset: 0;
        }
      }
    }
    .dot {
      margin: 4px;
      width: 22px;
      height: 22px;
      border-radius: 50%;
      background-color: rgba(111, 18, 143, 0.5);
      transition:
        transform 0.5s var(--easing),
        background-color 0.5s var(--easing);
      display: grid;
      place-items: center;
      svg {
        stroke-dasharray: 16;
        stroke-dashoffset: 16;
        transition: stroke-dashoffset 0.5s var(--easing);
      }
    }
  }
</style>
