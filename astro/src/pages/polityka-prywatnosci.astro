---
import sanityFetch from "@/utils/sanity.fetch";
import metadataFetch from "@/utils/metadata.fetch";
import Layout from "../layouts/Layout.astro";
import Markdown from "@/components/ui/markdown.astro";

const metadata = await metadataFetch("PrivacyPolicy_Page");

const { Hero, Content } = await sanityFetch<{
  Hero: { heading: string; paragraph: string };
  Content: {
    heading: string;
    paragraph: string;
  }[];
}>({
  query: `
    *[_type == "PrivacyPolicy_Page"][0] {
      Hero {
        heading,
        paragraph,
      },
      Content[] {
        heading,
        paragraph,
      },
    }
  `,
});
---

<Layout {...metadata} path='/polityka-prywatnosci'>
  <header>
    <Markdown tag='h1'>{Hero.heading}</Markdown>
    <Markdown>{Hero.paragraph}</Markdown>
  </header>
  <section>
    {
      Content.map(({ heading, paragraph }) => (
        <div>
          <Markdown tag='h2' class='h3'>
            {heading}
          </Markdown>
          <Markdown class='paragraph'>{paragraph}</Markdown>
        </div>
      ))
    }
  </section>
</Layout>

<style lang='scss'>
  header {
    max-width: calc(465rem / 16);
    h1 {
      margin-bottom: clamp(12px, calc(20vw / 7.68), 20px);
    }
  }
  section {
    counter-reset: counter;
    max-width: calc(871rem / 16);
    display: grid;
    gap: clamp(36px, calc(48vw / 7.68), 48px);
    h2 {
      counter-increment: counter;
      display: grid;
      grid-template-columns: auto 1fr;
      gap: 12px;
      align-items: center;
      margin-bottom: clamp(12px, calc(20vw / 7.68), 20px);
      &::before {
        content: counter(counter);
        display: flex;
        align-items: center;
        justify-content: center;
        width: 44px;
        height: 44px;
        border-radius: 50%;
        background: linear-gradient(239deg, #f3fffe, #d0f5f3);
        color: var(--primary-800, #01403b);
      }
    }
    .paragraph {
      margin-left: 28px;
    }
  }
</style>
